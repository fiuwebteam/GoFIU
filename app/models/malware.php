<?php 
class Malware extends AppModel {
//---------------------------------------------------------------------------------
	var $name = 'Malware';
	var $validate = array('malware_hash' => array('notEmpty', 'isUnique'));
	//---------------------------------------------------------------------------------
    //---------------------------------------------------------------------------------
	function isMalware($url) {
		
		if ($url == "http://") {
			return;
		}
		
		$url = strtolower($url);
		$url_parsed = parse_url($url);
		
		if (!isset($url_parsed["host"])) {
			return;
		}
		
		if (isset($url_parsed["path"])) {
			$path_parsed = explode("/", $url_parsed["path"]);
			for($x = 0; $x < count($path_parsed); $x++) {
				$url = $url_parsed["host"];
				$url = urldecode($url); //remove hex encodings
				$url = preg_replace('/^\.*/','', $url); //remove leading dots
				$url = preg_replace('/\.*$/','', $url); //remove trailing dots
				$url = preg_replace('/\.+/','.', $url); //replace consecutive dots
				$url = preg_replace('/\/+/','/', $url); //replace consecutive slashes
				for ($y = 0; $y <= $x; $y++ ) {
					$url .= $path_parsed[$y];
					if ($y != count($path_parsed) -1) {
						$url .= "/";
					}
				}
				$params = array();
				$params["conditions"] = array("malware_hash" => md5($url));				
				$hit = $this->find("count", $params);
				if ($hit > 0) {
					return true;
				}
			}
		} else {
			$url = $url_parsed["host"];
			$url = urldecode($url); //remove hex encodings
			$url = preg_replace('/^\.*/','', $url); //remove leading dots
			$url = preg_replace('/\.*$/','', $url); //remove trailing dots
			$url = preg_replace('/\.+/','.', $url); //replace consecutive dots
			$url = preg_replace('/\/+/','/', $url); //replace consecutive slashes
			$params = array();
			$params["conditions"] = array("malware_hash" => md5($url));			
			$hit = $this->find("count", $params);
			if ($hit > 0) {
				return true;
			}
		}
		
		if (isset($url_parsed["query"])) {
			$url .= "?" . $url_parsed["query"];
			
			$params = array();
			$params["conditions"] = array("malware_hash" => md5($url));
			$hit = $this->find("count", $params);
			if ($hit > 0) {
				return true;
			}
		}
		
		$host_parsed = explode(".", $url_parsed["host"]);
		
		if (count($host_parsed) > 2) {
			if (isset($path_parsed)) {
				for($x = 0; $x < count($path_parsed); $x++) {
					$url = "{$host_parsed[1]}.{$host_parsed[2]}";
					$url = urldecode($url); //remove hex encodings
					$url = preg_replace('/^\.*/','', $url); //remove leading dots
					$url = preg_replace('/\.*$/','', $url); //remove trailing dots
					$url = preg_replace('/\.+/','.', $url); //replace consecutive dots
					$url = preg_replace('/\/+/','/', $url); //replace consecutive slashes
					for ($y = 0; $y <= $x; $y++ ) {
						$url .= $path_parsed[$y];
						if ($y != count($path_parsed) -1) {
							$url .= "/";
						}
					}
					
					$params = array();
					$params["conditions"] = array("malware_hash" => md5($url));
					$hit = $this->find("count", $params);
					if ($hit > 0) {
						return true;
					}
				}
				
				if (isset($url_parsed["query"])) {
					$url .= "?" . $url_parsed["query"];
					
					$params = array();
					$params["conditions"] = array("malware_hash" => md5($url));
					$hit = $this->find("count", $params);
					if ($hit > 0) {
						return true;
					}
				}
			}
		}
		return false;
	}
	//---------------------------------------------------------------------------------
}
//---------------------------------------------------------------------------------
?>